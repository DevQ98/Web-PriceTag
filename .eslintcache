[{"C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\views\\Design\\Design.js":"1","C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\views\\Design\\DesignPage.js":"2","C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\components\\layout\\Menu.js":"3"},{"size":16463,"mtime":1609113402655,"results":"4","hashOfConfig":"5"},{"size":11880,"mtime":1609111907848,"results":"6","hashOfConfig":"5"},{"size":13922,"mtime":1609113210935,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"usjvlb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\views\\Design\\Design.js",["16","17","18"],"import React, { useState, Component } from 'react';\r\n\r\nimport { FaBorderAll ,FaListUl } from \"react-icons/fa\";\r\nimport { AiOutlineAlignRight, AiOutlineAlignLeft, AiOutlineAlignCenter  ,AiOutlineBold \r\n    , AiOutlineBorderBottom,AiOutlineBorderLeft,AiOutlineBorderRight,AiOutlineBorderTop} from \"react-icons/ai\";\r\nimport { FiItalic } from \"react-icons/fi\";\r\nimport { ImTextHeight } from \"react-icons/im\";\r\nimport { IoArrowRedoSharp , IoArrowUndoSharp} from \"react-icons/io5\";\r\nimport { IoIosArrowDropleft} from \"react-icons/io\";\r\n\r\nimport FontPicker from \"../../components/common/Picker/Font-Picker\";\r\nimport ButtonExample from '../../components/common/Picker/Color-Picker';\r\n\r\nimport FontSize from '../../components/common/Picker/Font-Size';\r\n\r\nimport { addSize, ChangeStatusNav } from '../../actions/designAction.js'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Menu from '../../components/layout/Menu';\r\nimport DesignPage from './DesignPage';\r\nimport ReactHintFactory from 'react-hint';\r\nimport Select from 'react-select';\r\n\r\nimport '../../assets/css/Menu.css';\r\nimport '../../assets/css/Design.css';\r\nimport Board from '../../components/common/Draggable/Board';\r\nimport Card from '../../components/common/Draggable/Card';\r\nconst options = [\r\n    { value: '1', label: '142784_IphoneTem_V1' },\r\n    { value: '2', label: '142784_IphoneTem_V2' },\r\n    { value: '3', label: '142784_IphoneTem_V3' },\r\n    { value: '4', label: '142784_IphoneTem_V4' },\r\n    { value: '5', label: '142784_IphoneTem_V5' },\r\n    { value: '6', label: '142784_IphoneTem_V6' }\r\n]\r\nconst border = [\r\n    { value: '1', label: <AiOutlineBorderLeft/> },\r\n    { value: '2', label: <AiOutlineBorderRight/> },\r\n    { value: '3', label: <AiOutlineBorderBottom/> },\r\n    { value: '4', label: <AiOutlineBorderTop/> },\r\n\r\n]\r\nconst ReactHint = ReactHintFactory(React)\r\nclass DesignCom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.postID = 0;\r\n        this.Body = \"0\";\r\n        this.state = {\r\n            Bigarray :[],\r\n            nameArray: [\r\n            ],\r\n            priceArray: [\r\n            ],\r\n            brandArray: [\r\n            ],\r\n            detailArray: [\r\n            ],\r\n            dateArray: [],\r\n            discountArray: [],\r\n            promotionArray: [\r\n            ],\r\n            statusArray: [\r\n            ],\r\n            templateArray: [],\r\n            fontSize: 16,\r\n            color: \"#333\",\r\n            isBold: false,\r\n            bold: \"bold\",\r\n            isItalic: false,\r\n            leftOpen: true,\r\n            isLineLeft: false,\r\n            isLineCenter: true,\r\n            isLineRight: false,\r\n            height: \"500\",\r\n            width : \"300\",\r\n            BG :\"\",\r\n            border : \"\",\r\n            isHeightText: true,\r\n            isBullet : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"11\", this.props)\r\n        this.props.ChangeStatusNav(true)\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (JSON.stringify(this.props.Info.Designs.changeSize) !== JSON.stringify(nextProps.Info.Designs.changeSize)) {\r\n            this.setState({\r\n                fontSize: nextProps.Info.Designs.changeSize\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickBold = (isBold) => {\r\n        this.setState({\r\n            isBold: !this.state.isBold\r\n        })\r\n    }\r\n    onClickItalic = (isItalic) => {\r\n        this.setState({\r\n            isItalic: !this.state.isItalic\r\n\r\n        })\r\n    }\r\n    onClickHeightText = (isHeightText) => {\r\n        this.setState({\r\n            isHeightText: !this.state.isHeightText\r\n\r\n        })\r\n    }\r\n    onClickHeightText = (isHeightText) => {\r\n        this.setState({\r\n            isHeightText: !this.state.isHeightText\r\n\r\n        })\r\n        console.log('heightss ' ,isHeightText)\r\n    }\r\n    onClickLineLeft = () => {\r\n        this.setState({\r\n            isLineLeft: true\r\n\r\n        })\r\n        this.setState({ isLineCenter: false })\r\n        this.setState({ isLineRight: false })\r\n    }\r\n    onClickBullet =(isBullet) =>{\r\n        this.setState({\r\n            isBullet: !this.state.isBullet\r\n\r\n        })\r\n    }\r\n    onClickLineCenter = () => {\r\n        this.setState({\r\n            isLineCenter: true\r\n        })\r\n        this.setState({ isLineLeft: false })\r\n        this.setState({ isLineRight: false })\r\n    }\r\n    onClickLineRight = () => {\r\n        this.setState({\r\n            isLineRight: true\r\n        })\r\n        this.setState({ isLineCenter: false })\r\n        this.setState({ isLineLeft: false })\r\n    }\r\n    setColor = (colors) => {\r\n        this.setState({\r\n            color: colors\r\n\r\n        });\r\n    }\r\n    setSide = (side) => {\r\n        this.setState({\r\n            leftOpen: side\r\n        })\r\n    }\r\n    setSize = (sizes) => {\r\n        this.setState({\r\n            fontSize: sizes\r\n        });\r\n    }\r\n    deleteEvent = (index) => {\r\n        const copyNameArray = Object.assign([], this.state.nameArray);\r\n        copyNameArray.splice(index, 1);\r\n\r\n        this.setState({\r\n            nameArray: copyNameArray\r\n        })\r\n    }\r\n\r\n    addTemplate = (h , w) => {\r\n\r\n        this.setState({\r\n            height :h,\r\n            width : w\r\n        })\r\n    }\r\n    addBG = (colors) => {\r\n\r\n        this.setState({\r\n            BG: colors\r\n        })\r\n    }\r\n\r\n    changeBorder(event) {\r\n\r\n    }\r\n    addName = (id ) => {\r\n        this.postID = id;\r\n        this.Body = \"Tên Sản phẩm\";\r\n        const copyNameArray = Object.assign([], this.state.nameArray);\r\n        copyNameArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            nameArray: copyNameArray\r\n        })\r\n    }\r\n    addPrice = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Giá Sản Phẩm  \"\r\n        const copyPriceArray = Object.assign([], this.state.priceArray);\r\n        copyPriceArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            priceArray: copyPriceArray\r\n            \r\n        })\r\n        console.log(\"kaka\",this.state.priceArray)\r\n    }\r\n    addBrand = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Nhà sản xuất \"\r\n        const copyBrandArray = Object.assign([], this.state.brandArray);\r\n        copyBrandArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            brandArray: copyBrandArray\r\n        })\r\n    }\r\n    addDetail = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Chi tiết sản phẩm \"\r\n        const copyDetailArray = Object.assign([], this.state.detailArray);\r\n        copyDetailArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            detailArray: copyDetailArray\r\n        })\r\n    }\r\n    addDate = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Ngày in \"\r\n        const copyDateArray = Object.assign([], this.state.dateArray);\r\n        copyDateArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            dateArray: copyDateArray\r\n        })\r\n    }\r\n    addDiscount = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Giá đã được giảm \"     \r\n        this.FontSize= 12\r\n        const copyDiscountArray = Object.assign([], this.state.discountArray);\r\n        copyDiscountArray.push({\r\n            id: id,\r\n            body: this.Body,\r\n            fontSize: this.FontSize\r\n        })\r\n        this.setState({\r\n            discountArray: copyDiscountArray\r\n        })\r\n    }\r\n    addStatus = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Trang thái sản phẩm \"\r\n        const copyStatusArray = Object.assign([], this.state.statusArray);\r\n        copyStatusArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            statusArray: copyStatusArray\r\n        })\r\n    }\r\n    addPromotion = (id) => {\r\n        this.postID = id;\r\n        this.Body = \"Chương trình khuyến mãi\"\r\n        const copyPromotionArray = Object.assign([], this.state.promotionArray);\r\n        copyPromotionArray.push({\r\n            id: id,\r\n            body: this.Body\r\n        })\r\n        this.setState({\r\n            promotionArray: copyPromotionArray\r\n        })\r\n    }\r\n    toggleSidebar = (event) => {\r\n        let key = `${event.currentTarget.parentNode.id}Open`;\r\n        this.setState({\r\n            [key]: !this.state[key],\r\n            leftOpen: !this.state.leftOpen\r\n        });\r\n    }\r\n\r\n    onChangeFontSize(sizes) {\r\n        this.setState({\r\n            fontSize: sizes\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let leftOpen = this.state.leftOpen ? 'open' : 'closed';\r\n        const{priceArray , \r\n            fontSize,\r\n            color,\r\n            isBold,\r\n            bold,\r\n            isItalic,\r\n            isLineLeft,\r\n            isLineCenter,\r\n            isLineRight ,\r\n            height,\r\n            width,\r\n            nameArray,\r\n            brandArray,\r\n            detailArray,\r\n            dateArray,\r\n            discountArray,\r\n            promotionArray,\r\n            statusArray,\r\n            BG,\r\n            isHeightText,\r\n            isBullet\r\n        } = this.state;\r\n        console.log(BG);\r\n        return (\r\n            \r\n            <div className='design__page'>\r\n             <ReactHint autoPosition events delay />\r\n                <div className='row design__page' id='left'>\r\n\r\n                        <Menu className={` design__menu`} visible={this.state.leftOpen ? 'Open' : 'closed'}\r\n                            addTemplate={this.addTemplate.bind(this)}\r\n                            setSides={this.setSide}\r\n                            addName={this.addName.bind(this)}\r\n                            addPrice={this.addPrice.bind(this)}\r\n                            addBrand={this.addBrand.bind(this)}\r\n                            addDetail={this.addDetail.bind(this)}\r\n                            addDate={this.addDate.bind(this)}\r\n                            addDiscount={this.addDiscount.bind(this)}\r\n                            addStatus={this.addStatus.bind(this)}\r\n                            addPromotion={this.addPromotion.bind(this)}\r\n                            addBG={this.addBG.bind(this)}\r\n                        ></Menu>\r\n\r\n                    <div className={`btn__sidebar--${this.state.leftOpen} ` } onClick={this.toggleSidebar}  >\r\n                        <div className=\" btn__push\">\r\n                           <IoIosArrowDropleft />\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className={` design__content--${leftOpen}`}>\r\n                        <div className=' tool-bar '>\r\n                            <div className=' tool-bar__item'>\r\n                                <IoArrowUndoSharp data-rh=\"Undo\" data-rh-at=\"bottom\" />\r\n                            </div>\r\n                            <div className=' tool-bar__item'>\r\n                                <IoArrowRedoSharp data-rh=\"Redo\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__font'>\r\n                                <FontPicker> </FontPicker>\r\n                            </div>\r\n                            <div className=' tool-bar__size'>\r\n                                <FontSize\r\n                                    setSizes={this.setSize}\r\n                                    onChange={this.onChangeFontSize.bind(this)}\r\n                                />\r\n                            </div>\r\n                            <div className=' tool-bar__item ' onClick={this.onClickBold}>\r\n                                <AiOutlineBold data-rh=\"Bold\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickItalic}>\r\n                                <FiItalic data-rh=\"Italic\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item'>\r\n                                <ButtonExample data-rh=\"Fill Color\" data-rh-at=\"bottom\" setColors={this.setColor}></ButtonExample>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickLineLeft}>\r\n                                <AiOutlineAlignLeft data-rh=\"AlignLeft\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickLineCenter}>\r\n                                <AiOutlineAlignCenter data-rh=\"AlignCenter\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickLineRight}>\r\n                                <AiOutlineAlignRight data-rh=\"AlignRight\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickBullet}>\r\n                                <FaListUl data-rh=\"Bullet\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <div className=' tool-bar__item' onClick={this.onClickHeightText}>\r\n                                <ImTextHeight data-rh=\"HeightText\" data-rh-at=\"bottom\"/>\r\n                            </div>\r\n                            <section  className=' tool-bar__item' data-rh=\"Border\" data-rh-at=\"bottom\">\r\n                                    <Select classNamePrefix=\"Font\" className='cb_border' onChange={this.changeBorder(this)}\r\n                                     options={border} placeholder={ <FaBorderAll />} />\r\n                            </section>\r\n                        </div> \r\n                        <div className =\"design__view\">\r\n                            <div>\r\n                                <div className=\" btn btn__save\">\r\n                                    Save\r\n                                </div>\r\n                                <section >\r\n                                    <Select classNamePrefix=\"Font\" className='cb_version'\r\n                                     options={options} placeholder=\"142784_IphoneTem_Now\" />\r\n                                </section>\r\n                            </div>\r\n                        <div className=\"design__view--bg\">         \r\n                              <DesignPage \r\n                                    nameArray={nameArray}\r\n                                    brandArray={brandArray}\r\n                                    detailArray={detailArray}\r\n                                    dateArray={dateArray}\r\n                                    discountArray={discountArray}\r\n                                    promotionArray={promotionArray}\r\n                                    statusArray={statusArray}\r\n                                    priceArray={priceArray}   \r\n                                    color={color} \r\n                                    bold={bold} \r\n                                    fontSize={fontSize}\r\n                                    isItalic={isItalic}\r\n                                    leftOpen={leftOpen}\r\n                                    isLineCenter={isLineCenter}\r\n                                    isLineLeft = {isLineLeft}\r\n                                    isLineRight={isLineRight}\r\n                                    isHeightText={isHeightText}\r\n                                    isBullet = {isBullet}\r\n                                    isBold ={isBold}\r\n                                    height={height}\r\n                                    width = {width}\r\n                                    BG={BG}\r\n                                > </DesignPage>\r\n                                \r\n                        </div>                \r\n                        </div>                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Info: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addSize: changeSize => {\r\n            dispatch(addSize(changeSize));\r\n        },\r\n        ChangeStatusNav: status => {\r\n            dispatch(ChangeStatusNav(status));\r\n        },\r\n    };\r\n};\r\n\r\nconst Design = connect(mapStateToProps, mapDispatchToProps)(DesignCom);\r\n\r\nexport default Design\r\n","C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\views\\Design\\DesignPage.js",["19","20","21","22","23"],"C:\\Users\\QUAN\\Documents\\Source\\web-design\\src\\components\\layout\\Menu.js",["24","25"],"import React, { Component } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { HiTemplate } from \"react-icons/hi\";\r\nimport { FaRegClone } from \"react-icons/fa\"\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\nimport { IoMdCloudUpload } from \"react-icons/io\";\r\nimport { MdTexture } from \"react-icons/md\";\r\nimport BGComponent from \"../../components/common/Picker/Color-PickerBG\";\r\nimport Card from \"../common/Draggable/Card\"\r\nimport ReactHintFactory from 'react-hint';\r\nimport 'react-hint/css/index.css';\r\nimport '../../assets/css/Menu.css';\r\nimport '../../assets/css/Design.css';\r\nimport Board from '../common/Draggable/Board';\r\nconst ReactHint = ReactHintFactory(React)\r\nexport default class Menu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leftOpen: true,\r\n            nono : true,\r\n            templateArray: [],\r\n            height :\"\",\r\n            width :\"\",\r\n            color:\"\"\r\n        }\r\n    }\r\n    toggleSidebar = (event) => {\r\n        let key = `${event.currentTarget.parentNode.id}Open`;\r\n        this.setState({ [key]: !this.state[key]  ,\r\n            leftOpen : !this.state.leftOpen,\r\n\r\n        });\r\n        console.log(\"aa\",key)\r\n            this.props.setSides(key)\r\n            \r\n      }\r\n      handleHeightChange= (e)  =>{\r\n        this.setState({height: e.target.value});\r\n     }\r\n     handleWidthChange = (e) => {\r\n        this.setState({width: e.target.value});\r\n     }\r\n     setBG = (colors) => {\r\n        this.setState({\r\n            color: colors\r\n\r\n        });\r\n    }\r\n     handleLogin=() => {\r\n\r\n        console.log(\"aaaa\",this.state.height)\r\n\r\n        const copytemplateArray = Object.assign([], this.state.templateArray);\r\n        setTimeout(() => {\r\n            copytemplateArray.splice(this, 1);\r\n        }, 1);\r\n       \r\n        copytemplateArray.push({\r\n            h : this.state.height,\r\n            w: this.state.width\r\n        })\r\n      \r\n        this.setState({\r\n            templateArray: copytemplateArray\r\n        })\r\n        \r\n        console.log(\"aaaa\",this.state.templateArray)\r\n    }\r\n    render() {\r\n        let  BG = this.state.color;\r\n        let  heights = this.state.height;\r\n        console.log(\"aa \" , this.state)\r\n        let widths = this.state.width;\r\n        return (\r\n            <>\r\n                <ReactHint autoPosition events delay />\r\n                <Tab.Container  defaultActiveKey=\"1\" >               \r\n                        <div className='menu'  >\r\n                            <Nav className=\"menu__col\"  >\r\n                                <Nav.Item className='menu__col-items ' onClick={this.toggleSidebar} >\r\n                                    <Nav.Link eventKey=\"1\" className='menu__col-item ' data-rh=\"Templates\" data-rh-at=\"right\">\r\n                                            <HiTemplate   />\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className='menu__col-items ' onClick={this.toggleSidebar}>\r\n                                    <Nav.Link eventKey=\"2\" className='menu__col-item'  data-rh=\"Elements\" data-rh-at=\"right\">\r\n                                            <FaRegClone  />                              \r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className='menu__col-items' onClick={this.toggleSidebar}>\r\n                                    <Nav.Link eventKey=\"3\" className='menu__col-item' data-rh=\"Unload\"  data-rh-at=\"right\">    \r\n                                            <AiOutlineCloudUpload  />                            \r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className='menu__col-items' onClick={this.toggleSidebar}>\r\n                                    <Nav.Link eventKey=\"4\" className='menu__col-item' data-rh=\"Background\" data-rh-at=\"right\">\r\n                                            <MdTexture   />                          \r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className='menu__col-request'onClick={this.toggleSidebar}>\r\n                                    <Nav.Link eventKey=\"5\">\r\n                                        <span className='menu__item' data-rh=\"Request\" data-rh-at=\"right\">\r\n                                            <i className=\"fas fa-user-edit\"  ></i>                            \r\n                                        </span>\r\n                                    </Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </div>\r\n                        <div className={` menu__content--${this.props.visible}`}  >\r\n                            <Tab.Content className='layout--none' >\r\n                                <Tab.Pane eventKey=\"1\" className=\"menu__template\">\r\n                                    <div className=\"menu-content__search\">\r\n                                        <span className=\"icon__search\"> <i class=\"fa fa-search \"></i> </span> \r\n                                        <input type=\"text\" className=\"panel-search-input\" \r\n                                        autocomplete=\"off\" data-toggle=\"db-search-input\" placeholder=\"Search \"></input>\r\n                                    </div>\r\n                                    <div className=\"menu-content__size\">\r\n                                        <div className=\"menu-content__size--height\">\r\n                                                <span className=\"span_txt\"> Dài</span>\r\n                                                <input className=\"panel-size-input\" type=\"text\" value={this.state.height} onChange={this.handleHeightChange}></input>\r\n                                        </div>\r\n                                        <div  className=\"menu-content__size--width\">\r\n                                                <span className=\"span_txt\">Rộng</span>\r\n                                                <input className=\"panel-size-input\" type=\"text\" value={this.state.width} onChange={this.handleWidthChange}></input>\r\n                                        </div>\r\n                                        <button type=\"button\" className=\" btn btn__create--template\" onClick={this.handleLogin}>Create</button>\r\n                                    </div>\r\n                                    {                                    \r\n                                       this.state.templateArray.map((tag , index) =>{\r\n                                           return<div className=\"menu-content__template\">\r\n                                                    <button className=\"btn__template stamp1\" onClick={()=>this.props.addTemplate(heights,widths)} data-id=\"1\" > </button>\r\n                                                    <span> {this.state.height} x {this.state.width} px </span>\r\n                                                 </div>  \r\n                                       })  \r\n                                    }\r\n                                    <div className=\"menu-content__template\">\r\n                                        <button className=\"btn__template stamp1\" onClick={()=>this.props.addTemplate(\"56\" , \"56\")} data-id=\"1\" > </button>\r\n                                        <span> 56 x 56 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\"  >\r\n                                        <button className=\"btn__template stamp2\"  onClick={()=>this.props.addTemplate(\"100\" , \"100\")} data-id=\"1\" >  </button>\r\n                                        <span> 100 x 100 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\">\r\n                                        <button className=\"btn__template stamp3\"   onClick={()=>this.props.addTemplate(\"800\" , \"500\")} data-id=\"1\" >  </button>\r\n                                        <span> 800 x 500 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\" >\r\n                                        <button className=\"btn__template stamp4\" onClick={()=>this.props.addTemplate(\"700\" , \"800\")} data-id=\"1\"  > </button>\r\n                                        <span> 700 x 800 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\"  >\r\n                                        <button className=\"btn__template stamp5\" onClick={()=>this.props.addTemplate(\"600\" , \"800\")} data-id=\"1\">  </button>\r\n                                        <span> 600 x 800 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\">\r\n                                        <button className=\"btn__template stamp6\"  onClick={()=>this.props.addTemplate(\"650\" , \"750\")} data-id=\"1\" ></button>\r\n                                        <span> 650 x 750 px </span>\r\n                                    </div>\r\n                                    <div className=\"menu-content__template\"  >\r\n                                        <button className=\"btn__template stamp7\" onClick={()=>this.props.addTemplate(\"500\" , \"700\")} data-id=\"1\">  </button>\r\n                                        <span> 500 x 700 px </span>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"2\">\r\n                                    <div className=\"menu-content__search\">\r\n                                        <span className=\"icon__search\"> <i class=\"fa fa-search \"></i> </span> \r\n                                        <input type=\"text\" className=\"panel-search-input\" \r\n                                        autocomplete=\"off\" data-toggle=\"db-search-input\" placeholder=\"Search\"></input>\r\n                                    </div>\r\n                                   \r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addName(0 + (Math.random() * (100-0)),\"BABA\")} data-id=\"1\" > Tên Sản phẩm</button>\r\n                                    </div>\r\n                                    <div style={{zIndex : 999}}>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addPrice(0 + (Math.random() * (100-1)),\"MANA\")}  data-id=\"2\" > Giá Gốc </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addBrand(0 + (Math.random() * (100-1)),\"MANA\")}  data-id=\"1\" > Hãng sản xuất </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addDate(0 + (Math.random() * (100-1)),\"MANA\")} data-id=\"1\" > Ngày in </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addDiscount(0 + (Math.random() * (100-1)),\"MANA\")} data-id=\"1\" > Giá khuyến mãi </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addPromotion(0 + (Math.random() * (100-1)),\"MANA\")} data-id=\"1\" > Chương trình khuyến mãi </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className=\"btn__element\" onClick={()=>this.props.addStatus(0 + (Math.random() * (100-1)),\"MANA\")}  data-id=\"1\" > Trang thái </button>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"3\">\r\n                                    <div className=\"menu-content__upload\">\r\n                                        <h3> Upload file here</h3>\r\n                                        <div className='upload__content'>\r\n                                            <IoMdCloudUpload className='upload__content-icon' ></IoMdCloudUpload>\r\n                                        </div>\r\n                                        <button className='btn btn__upload'>Unload</button>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"4\">\r\n                                    <div>\r\n                                        <BGComponent setBGs={this.setBG} ></BGComponent>\r\n                                        <button type=\"button\" className=\" btn bnt__request\" onClick={()=>this.props.addBG(BG)} >Change </button>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"5\">\r\n                                    <div  className=\"menu-content__request\">\r\n                                        <input className=\"txt_decription\" type=\"text\" placeholder=\"Desciptions\" ></input>\r\n                                        <button type=\"button\" className=\" btn bnt__request\" > Send Request</button>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </div>\r\n\r\n                </Tab.Container>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n",{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":25},{"ruleId":"26","severity":1,"message":"30","line":27,"column":8,"nodeType":"28","messageId":"29","endLine":27,"endColumn":13},{"ruleId":"26","severity":1,"message":"31","line":28,"column":8,"nodeType":"28","messageId":"29","endLine":28,"endColumn":12},{"ruleId":"26","severity":1,"message":"32","line":21,"column":11,"nodeType":"28","messageId":"29","endLine":21,"endColumn":16},{"ruleId":"26","severity":1,"message":"33","line":44,"column":27,"nodeType":"28","messageId":"29","endLine":44,"endColumn":38},{"ruleId":"34","severity":1,"message":"35","line":58,"column":43,"nodeType":"36","messageId":"37","endLine":58,"endColumn":45},{"ruleId":"34","severity":1,"message":"35","line":64,"column":45,"nodeType":"36","messageId":"37","endLine":64,"endColumn":47},{"ruleId":"26","severity":1,"message":"38","line":134,"column":27,"nodeType":"28","messageId":"29","endLine":134,"endColumn":35},{"ruleId":"26","severity":1,"message":"31","line":10,"column":8,"nodeType":"28","messageId":"29","endLine":10,"endColumn":12},{"ruleId":"26","severity":1,"message":"30","line":15,"column":8,"nodeType":"28","messageId":"29","endLine":15,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Board' is defined but never used.","'Card' is defined but never used.","'cubes' is assigned a value but never used.","'inputTarget' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'moveable' is assigned a value but never used."]